# --- HTTPS vhost --- REPLACE ALL alexdu1996sec485space WITH YOUR DOMAIN and /home/alex/apps/b2b-business WITH YOUR APP PATH ---
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name alexdu1996sec485space.space www.alexdu1996sec485space.space;

  # Redirect www -> apex
  if ($host = www.alexdu1996sec485space.space) {
    return 301 https://alexdu1996sec485space.space$request_uri;
  }

  # SSL (already issued by certbot)
  ssl_certificate     /etc/letsencrypt/live/alexdu1996sec485space.space/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/alexdu1996sec485space.space/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # Static assets built by Vite
  location /assets/ {
    root /home/alex/apps/b2b-business/dist/public;
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
    try_files $uri =404;
  }

  # Public files written by the app
  location /qr-code/ {
    alias /home/alex/apps/b2b-business/public/qr-code/;
    access_log off;
    expires max;
  }

  location /uploads/ {
    alias /home/alex/apps/b2b-business/public/uploads/;
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    access_log off;
    try_files $uri =404;
  }

  # Block risky file types under /uploads
  location ~* ^/uploads/.*\.(php|html|js|css|txt|pdf|docx?|exe|zip)$ {
    return 403;
  }

  # API first so it doesn't fall through
  location /api/ {
    proxy_pass http://127.0.0.1:5000;
    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;

    proxy_cookie_path / /;
    proxy_cookie_flags ~ secure;
    proxy_cookie_flags ~ httponly;
    proxy_cookie_flags ~ samesite=lax;

    proxy_read_timeout 120s;
    proxy_connect_timeout 30s;
    proxy_send_timeout 120s;

    proxy_buffering off;
    proxy_request_buffering off;
    proxy_redirect off;
  }

  # Everything else (HTML routes) -> Node for SEO routing
  location / {
    proxy_pass http://127.0.0.1:5000;
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header Cookie $http_cookie;
    proxy_pass_header Set-Cookie;

    proxy_cookie_path / /;
    proxy_cookie_flags ~ secure;
    proxy_cookie_flags ~ httponly;
    proxy_cookie_flags ~ samesite=lax;

    proxy_read_timeout 30s;
    proxy_connect_timeout 10s;
    proxy_send_timeout 30s;

    proxy_buffering off;
    proxy_redirect off;
  }
}

# --- HTTP -> HTTPS redirect ---
server {
  listen 80;
  listen [::]:80;
  server_name alexdu1996sec485space.space www.alexdu1996sec485space.space;
  return 301 https://alexdu1996sec485space.space$request_uri;
}